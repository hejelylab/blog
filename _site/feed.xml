<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2021-01-28T21:36:27+03:00</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Hejely Lab</title><subtitle>Welcome to this blog.</subtitle><author><name>HejelyLab</name></author><entry><title type="html">Was a specific file accessed by this user?</title><link href="http://localhost:4000/blog/IRC/file-access-evidence" rel="alternate" type="text/html" title="Was a specific file accessed by this user?" /><published>2021-01-28T21:00:00+03:00</published><updated>2021-01-28T21:00:00+03:00</updated><id>http://localhost:4000/blog/IRC/file-access-evidence</id><content type="html" xml:base="http://localhost:4000/blog/IRC/file-access-evidence">&lt;p&gt;Sometimes, we’re encountered with this question of whether for example a compromised account has accessed an important local/remote file.&lt;/p&gt;

&lt;p&gt;There are two important artifacts on Windows system that may reveal this information to us which are JumpLists and LNK files.&lt;/p&gt;

&lt;h3 id=&quot;what-are-jumplists&quot;&gt;What are JumpLists?&lt;/h3&gt;
&lt;p&gt;Jumplists are means to ease user’s access to the frequently/previously accessed items in system with regards to the installed application.&lt;/p&gt;

&lt;p&gt;This will provide us an opportunity to see if an an application file was opened under a user profile or not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JumpLists Locations:&lt;/strong&gt;&lt;br /&gt;
They are in each user’s pofile in these two directories&lt;br /&gt;
C:\Users&amp;lt;username&amp;gt;\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations&lt;br /&gt;
C:\Users&amp;lt;username&amp;gt;\AppData\Roaming\Microsoft\Windows\Recent\CustomDestinations&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JumpLists Parsing Tools:&lt;/strong&gt;&lt;br /&gt;
Jumplist Explorer (GUI based Jump List viewer)&lt;br /&gt;
JLECmd (Jump List parser)&lt;br /&gt;
etc.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br /&gt;
Let’s check 3rd easy challenge (Bling-Bling) in (incident-response-challenge.com) website and try to solve it.&lt;/p&gt;

&lt;p&gt;Used tool here will be Jumplist Explorer.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2nd-challenge&quot;&gt;2nd Challenge&lt;/h3&gt;

&lt;p&gt;This challenge focuses on proving whether one of the suspected users has accessed an xlsx file and provides as an answer both their first name as well as the accessed file name.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question Screenshot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210128-1.png&quot; alt=&quot;first screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since the question artifacts are only the Jumplist directories (AutomaticDestinations and CustomDestinations) for two users, we’ll import the content of these four directories into JumpList Explorer at once, and start navigating them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210128-2.png&quot; alt=&quot;second screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can observe the finance related file appears under JSnow profile JumpList&lt;/p&gt;

&lt;h3 id=&quot;answer-to-the-challenge&quot;&gt;Answer to the challenge&lt;/h3&gt;
&lt;p&gt;FileName: Finance-Summary.rar&lt;br /&gt;
First Name: John&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;As mentioned above, the other important artifact to prove if a user has accessed/opened file is LNK files.&lt;/p&gt;

&lt;h3 id=&quot;what-are-lnk-files&quot;&gt;What are LNK files?&lt;/h3&gt;
&lt;p&gt;LNK files are Microsoft Windows Shortcut Files.
These LNK files usually get created once opening a local/remote file.&lt;/p&gt;

&lt;p&gt;This can also be helpful sometimes even if the original (target) file has been removed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LNK files Locations:&lt;/strong&gt;&lt;br /&gt;
They can be anywhere in filesystem; however, the following two directories are interesting ones to parse when trying to seach for an evidence related to whether a file has been accessed/opened or not.&lt;/p&gt;

&lt;p&gt;C:\Users&amp;lt;username&amp;gt;\AppData\Roaming\Microsoft\Windows\Recent&lt;br /&gt;
C:\Users&amp;lt;username&amp;gt;\AppData\Roaming\Microsoft\Office\Recent&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LNK Files Parsing Tools:&lt;/strong&gt;&lt;br /&gt;
LECMD&lt;br /&gt;
exiftool&lt;br /&gt;
etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br /&gt;
Let’s check 8th easy challenge (LNK Files) in (incident-response-challenge.com) website and try to solve it.&lt;/p&gt;

&lt;p&gt;Used tool here will be LECMD&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LECMD used command:&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LECmd.exe -d &quot;C:\Users\%username%\Downloads\Challenges\Easy - LNK - Rumors\Challenge\littlefinger\AppData\Roaming\Microsoft\Windows\Recent&quot; --csv . --csvf littlefingerLNK.csv&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt; directs lecmd to parse recent folder of littlefinger user.&lt;br /&gt;
I’ve already downloaded the question evidence into my current Downloads folder.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--csv .&lt;/code&gt; means create csv file in the same current directory&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--csvf&lt;/code&gt; means name the outputted csv file this way&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3rd-challenge&quot;&gt;3rd Challenge&lt;/h3&gt;

&lt;p&gt;This challenge focuses on proving whether a specific user (Littlefinger) has accessed the salaries file or not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question Screenshot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210128-3.png&quot; alt=&quot;third screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Provided evidence is the suspected user’s profile; therefore, we’ll check LNK files and parse them using LECMD.&lt;/p&gt;

&lt;p&gt;As we can see in the outputted CSV file after some filtration to only include files that have network directory since we’re only interested in network share access&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210128-4.png&quot; alt=&quot;fourth screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;answer-to-the-challenge-1&quot;&gt;Answer to the challenge&lt;/h3&gt;
&lt;p&gt;F1a9-AFNIEJFJSSE&lt;/p&gt;</content><author><name>HejelyLab</name></author><summary type="html">Sometimes, we’re encountered with this question of whether for example a compromised account has accessed an important local/remote file.</summary></entry><entry><title type="html">Was there timestomping on the analyzed system?</title><link href="http://localhost:4000/blog/IRC/timestomping" rel="alternate" type="text/html" title="Was there timestomping on the analyzed system?" /><published>2021-01-25T23:50:00+03:00</published><updated>2021-01-25T23:50:00+03:00</updated><id>http://localhost:4000/blog/IRC/Timestomping</id><content type="html" xml:base="http://localhost:4000/blog/IRC/timestomping">&lt;h3 id=&quot;what-is-timestomping&quot;&gt;What is timestomping?&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;Timestomping is the ability from an attacker to modify original timestamps of folder/file in order to prevent the investigator from associating these timestamps with an attack period.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;master-file-table-mft&quot;&gt;Master File Table (MFT)&lt;/h3&gt;
&lt;p&gt;Filesystem usually has an index mechanism where you can see files/directories names in the system and their associated metadata. This includes timestamps.
In NTFS filesystem, each folder/file has one entry in MFT with two different timestamps called $STANDARD_INFORMATION and $FILE_NAME.&lt;/p&gt;

&lt;p&gt;Mainly, standard information attributes are modifiable by users, whereas file name attributes tend to be modified by OS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MFT Location:&lt;/strong&gt;&lt;br /&gt;
Root directory of the drive for example C:$MFT&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MFT Parsing Tools:&lt;/strong&gt;&lt;br /&gt;
MFTECMD&lt;br /&gt;
analyzeMFT.py&lt;br /&gt;
Mft2Csv&lt;br /&gt;
MFTExplorer&lt;br /&gt;
etc.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br /&gt;
Let’s check 1st easy challenge (Time Machine) in (incident-response-challenge.com) website and try to solve it.&lt;/p&gt;

&lt;p&gt;Let’s use MFTECmd to parse $MFT file, and then view the results using Timeline Explorer&lt;/p&gt;

&lt;p&gt;Link to download these two tools: https://ericzimmerman.github.io/#!index.md&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MFTECmd used command:&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MFTECMD.exe -f &quot;$MFT&quot; --csv . --bn MFTOUTPUT.csv&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;. means we would like to save the outputted CSV file to the same directory.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1st-challenge&quot;&gt;1st Challenge&lt;/h3&gt;

&lt;p&gt;The challenge focuses on changes on user’s desktop and the provided evidence is $MFT file; 
therefore, we have parsed the file using MFTECMD. Now, we’ll view the parsed MFT using Timeline Explorer&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question Screenshot&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210125-1.png&quot; alt=&quot;first screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Timeline explorer after opening parsed $MFT&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210125-2.png&quot; alt=&quot;second screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In order to have a better view, we’ll reset column widths (Tools &amp;gt; Rest Column Widths (Ctrl+R))
Now, we’ll filter to show only the user’s desktop folder as the parent path&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/210125-3.png&quot; alt=&quot;third screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You may notice I’ve brough the attention into mainly two columns which are Created0x10 and Created0x30&lt;/p&gt;

&lt;p&gt;Created0x10 is standard info creation time (easy be tampered with)&lt;br /&gt;
Created 0x30 is file name creation time (difficult to be tampered with).&lt;br /&gt;
If they differ, TIMESTOMPING might have happened.&lt;br /&gt;
Timeline Explorer doesn’t show timestamp in Created0x30 if it has the same date and time of Created0x10 to ease investigator work.&lt;/p&gt;

&lt;p&gt;We can clearly see that file name creation time (Createdx30) is in  the same timeframe other files in the same folder have been created.&lt;/p&gt;

&lt;h3 id=&quot;answer-to-the-challenge&quot;&gt;Answer to the challenge&lt;/h3&gt;
&lt;p&gt;FileName: Mod-File.txt&lt;br /&gt;
Time Stamp: 19-01-2020 11:51:19&lt;/p&gt;</content><author><name>HejelyLab</name></author><summary type="html">What is timestomping? Timestomping is the ability from an attacker to modify original timestamps of folder/file in order to prevent the investigator from associating these timestamps with an attack period.</summary></entry></feed>